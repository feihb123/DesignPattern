package cn.datacharm.bridge.shape;

import java.awt.Graphics;

/**
 *
 * @author hjx
 */
public class Canvas extends javax.swing.JPanel {

    private Shape shape; 
    
    public void initCanvasContext(Shape shape){
       this.shape = shape;
      
    }
    /**
     * Creates new form Canvas
     */
    public Canvas() {
        initComponents();
    }
    
    @Override
    public void paint(Graphics graphics) {
        if(shape!=null){
              // 必须先调用父类的paint方法
              super.paint(graphics);
              //画图
              shape.draw(graphics);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
